#!/bin/sh -

# Experiments for: Fast Mutual Exclusion by the Triangle Algorithm, Wim H. Hesselink, Peter A. Buhr
# and David Dice, submitted

algorithms="Burns2 LamportFast Taubenfeld TaubenfeldBuhr Kessels PetersonBuhr Triangle TriangleMod MCS"
outdir=`hostname`
mkdir -p ${outdir}

if [ ${#} -ne 0 ] ; then
    algorithms="${@}"
fi

cflag="-Wall -Werror -std=gnu11 -g -O3 -DNDEBUG -fno-reorder-functions -DPIN" #

runalgorithm() {
    for flag in "" "FAST" ; do
	echo "${outdir}/${1}${2}${flag}"
	gcc ${cflag} ${flag:+-D${flag}} ${2:+-D${2}} -DAlgorithm=${1} Harness.c -lpthread -lm
	./run1 > "${outdir}/${1}${2}${flag}"
	if [ -f core ] ; then
	    echo core generated for ${1}
	    break
	fi
    done
}

rm -rf core
for algorithm in ${algorithms} ; do
    if [ ${algorithm} = "Triangle" -o ${algorithm} = "TriangleMod" ] ; then
	runalgorithm ${algorithm} PB
	runalgorithm ${algorithm} TB
    else
	runalgorithm ${algorithm}
    fi
done
